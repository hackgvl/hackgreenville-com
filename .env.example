##
#
#
# THE .env FILE IS CACHED BY LARAVEL AND IT IS USUALLY NECESSARY
# TO RUN Artisan COMMANDS BEFORE CONFIG CHANGES ARE RECOGNIZED BY LARAVEL
# php artisan config:clear && php artisan config:cache
#
#
###


APP_NAME=HackGreenville
APP_ENV=local
# set this to a random 32 character or base64 value
APP_KEY=
APP_DEBUG=true
APP_URL=http://localhost:8000
#APP_DASHBOARD_ROOT_PATH=admin

FORCE_SSL=false

LOG_CHANNEL=single

# webhook for posting Laravel logs to a Slack channel (we post to #hg-labs-slackbot-debugging-spam)
#LOG_SLACK_WEBHOOK_URL=

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=homestead
DB_USERNAME=homestead
DB_PASSWORD=secret

BROADCAST_DRIVER=log
# Setting the cache driver to "array" will disable the cache
CACHE_DRIVER=file
SESSION_DRIVER=file
SESSION_LIFETIME=120
QUEUE_DRIVER=sync

REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

# using Mailtrap (a fake SMTP) will not actually send emails 
MAIL_DRIVER=smtp
MAIL_HOST=smtp.mailtrap.io
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null

TZ='America/New_York'

EVENTS_API_DOMAIN='https://events.openupstate.org'
ORGS_API_DOMAIN='https://data.openupstate.org'

GOOGLE_TAG_MANAGER=

HCAPTCHA_SITEKEY=
HCAPTCHA_SECRET=
SLACK_CONTACT_WEBHOOK=

# The private Eventbrite API key / token for importing events
EVENTBRITE_PRIVATE_TOKEN=

# The maximum number of days in the past that the "Import" function
# will request from the remote event services
# This can indirectly limit the consuming application's start_date
EVENT_IMPORTER_MAX_DAYS_IN_PAST=30

# The maximum number of days in the future that the "Import" function
# will request from the remote event services
# This can indirectly limit the consuming application's end_date
EVENT_IMPORTER_MAX_DAYS_IN_FUTURE=180

# Required to authorize with the Meetup GraphQL API
# We are using the JWT Flow for authentication
# https://www.meetup.com/api/authentication/#p04-jwt-flow-section
# Client ID = OAuth client ID. Member ID = Meetup user ID. Private Key ID = JWT private key for OAuth client. Private Key Path = Path to the private key file.
# At this time, Pro membership is required to generate a Meetup OAuth client.
EVENT_IMPORTER_MEETUP_GRAPHQL_CLIENT_ID=
EVENT_IMPORTER_MEETUP_GRAPHQL_MEMBER_ID=
EVENT_IMPORTER_MEETUP_GRAPHQL_PRIVATE_KEY_ID=
EVENT_IMPORTER_MEETUP_GRAPHQL_PRIVATE_KEY_PATH=

# When no start_date is provided by the consuming application, this many days
# in the past will be returned.  That is, start_date = {today's date - EVENTS_API_DEFAULT_DAYS}
EVENTS_API_DEFAULT_DAYS=1

# If you want to enable Telescope, you will need to set this to true and uncomment the line below.
#TELESCOPE_ENABLED=true

# Give Vite a path to local cert and key files if you want HTTPS during development.
# Vite docs: https://vitejs.dev/config/server-options#server-https
# Node reference: https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener
#VITE_HTTPS_CERT=
#VITE_HTTPS_KEY=
# Vite's default development settings for this project are included here
#VITE_SERVER_HOST='0.0.0.0'
#VITE_SERVER_POLLING=true
# Set the client-side host if different than `VITE_SERVER_HOST`,
# such as when developing inside a container.
#VITE_SERVER_HMR_HOST=
