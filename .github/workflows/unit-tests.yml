name: Run unit tests

on:
  pull_request_target:
    types: [ opened, synchronize, reopened ]
    branches:
      - master
      - develop

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: hackgreenville
          MYSQL_USER: hackgreenville
          MYSQL_ROOT_PASSWORD: test
          MYSQL_PASSWORD: test
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }} # Important: test the actual PR code

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: :php_psr

      - name: install php dependencies
        run: composer install

      - name: install node dependencies
        run: yarn install

      - name: copy environment variables to .env
        run: cp .env.ci .env

      - name: migrate database
        run: php artisan migrate --seed

      - name: Build website
        run: yarn build

      - name: run tests
        run: php artisan test

  deploy-pr-preview:
    needs: tests
    runs-on: ubuntu-latest
    container: ghcr.io/railwayapp/cli:latest
    environment: staging
    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Create PR Environment
        id: create-env
        run: |
          # Create environment name
          PR_ENV_NAME="pr-${{ github.event.pull_request.number }}"

          # Create new environment by duplicating staging
          railway environment new $PR_ENV_NAME --duplicate staging

          # Switch to the new environment
          railway environment $PR_ENV_NAME

          echo "PR_ENV_NAME=$PR_ENV_NAME" >> $GITHUB_OUTPUT

      - name: Deploy to PR Environment
        run: |
          # Deploy to the PR environment
          railway up --detach --environment=${{ steps.create-env.outputs.PR_ENV_NAME }}

      - name: Get Deployment URL
        id: get-url
        run: |
          # Wait for deployment to start
          sleep 10

          # Get project info and parse URL
          PROJECT_INFO=$(railway status --json)

          # The URL pattern will be your-service-pr-NUMBER.up.railway.app
          # You may need to construct this based on your service naming
          echo "deployment_url=https://your-service-${{ steps.create-env.outputs.PR_ENV_NAME }}.up.railway.app" >> $GITHUB_OUTPUT

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const environment = 'pr-${{ github.event.pull_request.number }}';
            const url = '${{ steps.get-url.outputs.deployment_url }}';

            const body = `### ðŸš‚ Railway PR Preview

            **Environment:** \`${environment}\`
            **URL:** ${url}

            This preview will be automatically removed when the PR is closed.`;

            // Check for existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' && comment.body.includes('Railway PR Preview')
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body
              });
            }
